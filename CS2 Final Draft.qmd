---
title: "Helmet Foam Case Study Report"
author: 'Katie Greene, Ava Harman, Chris Seery, Ian Stonecypher'
date: 'May, 2024'
format: pdf
---

```{r}
#| echo: false
#| include: false
#| label: front-matter
#| warning: false
# clean up & set default chunk options
rm(list = ls())
knitr::opts_chunk$set(echo = FALSE)

# packages
library(tidyverse) # for example
library(ggplot2) # for example
library(car)       # for example
library(tinytex)   # for example
library(patchwork)
library(lme4)
library(lmerTest)
library(leaps)
foam_data <- read.csv("foamData.csv")

foam_data_scaled <- foam_data |>
  filter(cycle <= 10000 & cycle > 0) |>
  mutate(dampingFrac = replace(dampingFrac, dampingFrac < 0, NA))

FactorModel <- lmer(log(stiffnessFrac) ~  factor(chemIndex) + freq + amp +  log(cycle) +  factor(chemIndex):log(cycle) + freq:log(cycle) + amp:log(cycle) + (1 + log(cycle)|ID), data = foam_data_scaled)

dampingModel <- lmer(log(dampingFrac) ~ porosity + factor(chemIndex) + freq + log(cycle) + porosity:log(cycle) + freq:log(cycle) + factor(chemIndex):log(cycle) + (1 + log(cycle)|ID), data = foam_data_scaled)

# Convert intervalCode to a factor with specified levels
foam_data_scaled$intervalCode <- factor(foam_data_scaled$intervalCode, levels = c("A", "B", "C", "D","E", "F", "G", "H","I", "J", "K", "L","M", "N"))

```


## 1. Project Description

This project comes to us from Moira Foster, from the Lawrence Livermore National Laboratory. Foster has been running experiments on the Colorado School of Mines campus to study the fatigue responses of stiffness and damping in different varieties of foam. In her designed experiment, pieces of foam were put into a universal load frame, which repeatedly compressed and decompressed each piece for thousands of cycles, and each piece had its stiffness and damping measured periodically. These measurements, as well as the parameters of each experimental run, were given to us to aid in the experiment’s analysis stage.

Foster’s objective is to understand what affects the changes in stiffness and damping in a piece of foam under repeated light compressions. The goal of our analysis is to discover patterns and build models to provide this understanding. With this understanding, the U.S. Military could improve the foam padding in marine special combat helmets, ideally so they can survive at least 10 years of regular use.

## 1.1 Research Questions

**Question 1:** What parameters are impacting the stiffness and damping of foam used in military helmets?

**Question 2:** How are these parameters impacting the fatigue response in stiffness and damping over time?

\newpage

## 1.2 Variables

\begin{center}
\textbf{Explanatory Variables:}
\end{center}

\begin{center}
\begin{tabular}{|l|l|}
\hline
\textbf{Variable Name} & \textbf{Description} \\
\hline
ID & The unique identifier of the different foam pieces \\
chemIndex & The chemical makeup type of the foam. 1 = 79, 2 = 100, 3 = 121 \\
porosity & The porosity level of the foam. Low = 71\%, high = 81\% \\
freq & The number of compressions per second (hz) \\
amp & The amplitude of the compressions \\
initialStrain & The initial measure of the strain of foam. (Originally labeled ``strain'') \\
initialStress & The initial measure of the stress of the foam. (Originally labeled ``stresskpa'') \\
cycle & The cycle number the measurement was taken at \\
\hline
\end{tabular}
\end{center}

\begin{center}
\text{Table 1: Explanatory Variables}
\end{center}

\begin{center}
\textbf{Response Variables}
\end{center}

\begin{center}
\begin{tabular}{|l|l|}
\hline
\textbf{Variable Name} & \textbf{Description} \\
\hline
stiffness & Measurement of the foam’s stiffness. (Originally labeled ``E1\_MPA'') \\
damping & Measurement of the foam’s damping. (Originally labeled ``delta\_rad'') \\
stiffnessFrac & Stiffness / first stiffness measurement \\
dampingFrac & tan(damping) / tan(first damping measurement) \\
\hline
\end{tabular}
\end{center}

\begin{center}
\text{Table 2: Response Variables}
\end{center}

The formulas for stiffnessFrac and dampingFrac were specified by Foster. She believed these would be more useful alternatives to studying raw stiffness and damping.

##  2. Exploratory Data Analysis (EDA)

We reformatted the data from wide to long to ensure each observation represented one measurement, not one foam sample. Measurements taken beyond 10,000 cycles were removed to maintain consistency across observations, and because Moira identified this as the most relevant time frame. The first measurements for stiffnessFrac and dampingFrac were removed as well, because they were all equal to 1 and did not convey useful information.

There were a few concerning observations with negative values of stiffness, likely due to a fault in the measuring machine. At Foster’s instruction, we converted these negative stiffness values to positive. Then we made the transformed response variable stiffnessFrac, which reports each stiffness measurement divided by that foam sample's initial stiffness measurement.

There were many observations with negative values of damping, but we were instructed to leave these as they were. Then we made the transformed response variable dampingFrac, which reports the tangent of each damping measurement divided by the tangent of that foam sample's initial damping measurement. DampingFrac had five data points that were drastic outliers, but these were changed to NA per Dr. Philtron's recommendation.

Printed below are how many of each type of foam sample was tested:

| Porosity | **ChemIndex 79** | **ChemIndex 100** | **ChemIndex 121** |
|---------:|:-----------------|:------------------|:------------------|
| **81**   | 9                | 7                 | 6                 |
| **71**   | 11               | 5                 | 8                 |

\begin{center}
\text{Table 3: Foam Sample Type Counts}
\end{center}

These counts show that a relatively small number of each type of foam were tested. The amounts are unequal as well, ranging from 5 to 11.

```{r}
#| echo: false
#| label: fig-1
#| warning: false
#| fig-cap: "Histogram of Frequencies Tested"
#| fig-align: "center"
#| fig-width: 4
#| fig-height: 4

foam_Samples <- foam_data[ ,c("ID", "chemIndex", "porosity", "freq", "amp", "initialStrain", "initialStress")]
foam_Samples <- unique(foam_Samples)

ggplot(foam_Samples, aes(x=amp)) +
  geom_histogram(bins=10)
```

The histogram in @fig-1 shows the distribution of compression amplitudes among the foam samples, revealing that certain amplitudes were tested much less frequently than others. These non-uniformities in sample distribution might impact the reliability of conclusions drawn from the analysis.

```{r}
#| echo: false
#| label: fig-2
#| warning: false
#| fig-cap: "StiffnessFrac and DampingFrac vs Cycle"
#| fig-align: "center"
#| fig-width: 10
#| fig-height: 4

p1 <- ggplot(foam_data_scaled, aes(y = stiffnessFrac, x = cycle, col=factor(ID))) +
  geom_point() + 
  theme(legend.position="none")

p2 <- ggplot(foam_data_scaled, aes(y = dampingFrac, x = cycle, col=factor(ID))) + 
  geom_point() +
  theme(legend.position="none")

combined <- p1 + p2

combined
```

In order to see how stiffnessFrac and dampingFrac change over time for all foams, we plotted a scatter plot for each vs cycle. The dot colors in @fig-2 represent which foam sample they were measured from. As cycle number increases, the stiffnessFrac and dampingFrac values not only change, but spread further apart. StiffnessFrac and dampingFrac both appear to have a relationship with cycle, but that relationship looks different for each foam sample.

```{r}
#foam_data_interval_N <- foam_data_scaled[foam_data_scaled$intervalCode == "N", ]

#ggplot(foam_data_interval_N, aes(y = stiffnessFrac, x = cycle)) + geom_point()

#foam_data_scaled$intervalCode == "N"

```

```{r}
#| echo: false
#| label: fig-3
#| warning: false
#| fig-cap: "Log(stiffnessFrac) vs Log(cycle) and Log(dampingFrac) vs Log(cycle), Colored by Freq"
#| fig-align: "center"
#| fig-width: 10
#| fig-height: 4

sp1 <- ggplot(foam_data_scaled, aes(y = log(stiffnessFrac), x = log(cycle))) + geom_point(aes(color = freq))

dp1 <- ggplot(foam_data_scaled, aes(y = log(dampingFrac), x = log(cycle))) + geom_point(aes(color = freq))

combined <- sp1 + dp1
combined
```

\newpage

In @fig-3, we logged the responses, and plotted them against the log of cycle. The relationships between log(cycle) and the logged responses look more linear than the relationships in @fig-2, so a linear model using these logged variables would fit better.

In order to understand how log(stiffnessFrac) and log(dampingFrac) behave given different frequencies, we also colored the samples in @fig-3 by frequency. For log(stiffnessFrac), we see that higher frequencies have a more negative trend than lower frequencies. For log(dampingFrac), we see that lower frequencies have a more negative trend than higher frequencies. Frequency looks related to both stiffnessFrac and dampingFrac.


```{r}
#| echo: false
#| label: fig-4
#| warning: false
#| fig-cap: "Log(stiffnessFrac) vs Log(cycle), Separated by ChemIndex and Porosity"
#| fig-align: "center"
#| fig-width: 18
#| fig-height: 8
#| 
sfc1 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 1 & foam_data$porosity == "high",], aes(x=log(cycle), y=log(stiffnessFrac))) +
  geom_point(color="red", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.325, 0.15) +
  labs(title="ChemIndex 79, Porisity 81") +
  theme(plot.title = element_text(size=25))
sfc2 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 2 & foam_data$porosity == "high",], aes(x=log(cycle), y=log(stiffnessFrac))) +
  geom_point(color="green", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.325, 0.15) +
  labs(title="ChemIndex 100, Porisity 81") +
  theme(plot.title = element_text(size=25))
sfc3 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 3 & foam_data$porosity == "high",], aes(x=log(cycle), y=log(stiffnessFrac))) +
  geom_point(color="cyan2", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.325, 0.15) +
  labs(title="ChemIndex 121, Porisity 81") +
  theme(plot.title = element_text(size=25))
sfc4 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 1 & foam_data$porosity == "low",], aes(x=log(cycle), y=log(stiffnessFrac))) +
  geom_point(color="red3", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.325, 0.15) +
  labs(title="ChemIndex 79, Porisity 71") +
  theme(plot.title = element_text(size=25))
sfc5 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 2 & foam_data$porosity == "low",], aes(x=log(cycle), y=log(stiffnessFrac))) +
  geom_point(color="green4", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.325, 0.15) +
  labs(title="ChemIndex 100, Porisity 71") +
  theme(plot.title = element_text(size=25))
sfc6 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 3 & foam_data$porosity == "low",], aes(x=log(cycle), y=log(stiffnessFrac))) +
  geom_point(col="blue", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.325, 0.15) +
  labs(title="ChemIndex 121, Porisity 71") +
  theme(plot.title = element_text(size=25))

combined <- sfc1 + sfc2 + sfc3 + sfc4 + sfc5 + sfc6 + plot_layout(ncol = 3)
combined
```

The plots in @fig-4 separate the log(stiffnessFrac) vs log(cycle) graph in @fig-3 to show how the interaction between chemical index and porosity impact log(stiffnessFrac). We can see that the chemical index 79 has many samples where log(stiffnessFrac) trends upwards, whereas chemical indices 100 and 121 mostly trend downwards. This indicates a relationship between log(stiffnessFrac) and chemical index. Downward trends mean the stiffness decreases as cycle increases, which is not what we are looking for in a durable foam.

We also see an effect from porosity. For chemical index 79, low porosity foam trends downward more often than high porosity foam, and for chemical index 100, low porosity foam trends upward more often than high porosity foam. So not only does porosity affect log(stiffnessFrac), but it effects it different ways for different chemical indices This suggests that a porosity:chemIndex interaction term might improve our model.


```{r}
#| echo: false
#| label: fig-5
#| warning: false
#| fig-cap: "Log(dampingFrac) vs Log(cycle), Separated by ChemIndex and Porosity"
#| fig-align: "center"
#| fig-width: 18
#| fig-height: 8
#| 
dfc1 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 1 & foam_data_scaled$porosity == "high",], aes(x=log(cycle), y=log(dampingFrac))) +
  geom_point(color="red", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.175, 0.125) +
  labs(title="ChemIndex 79, Porisity 81") +
  theme(plot.title = element_text(size=25))
dfc2 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 2 & foam_data_scaled$porosity == "high",], aes(x=log(cycle), y=log(dampingFrac))) +
  geom_point(color="green", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.175, 0.125) +
  labs(title="ChemIndex 100, Porisity 81") +
  theme(plot.title = element_text(size=25))
dfc3 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 3 & foam_data_scaled$porosity == "high",], aes(x=log(cycle), y=log(dampingFrac))) +
  geom_point(color="cyan2", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.175, 0.125) +
  labs(title="ChemIndex 121, Porisity 81") +
  theme(plot.title = element_text(size=25))
dfc4 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 1 & foam_data_scaled$porosity == "low",], aes(x=log(cycle), y=log(dampingFrac))) +
  geom_point(color="red3", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.175, 0.125) +
  labs(title="ChemIndex 79, Porisity 71") +
  theme(plot.title = element_text(size=25))
dfc5 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 2 & foam_data_scaled$porosity == "low",], aes(x=log(cycle), y=log(dampingFrac))) +
  geom_point(color="green4", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.175, 0.125) +
  labs(title="ChemIndex 100, Porisity 71") +
  theme(plot.title = element_text(size=25))
dfc6 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 3 & foam_data_scaled$porosity == "low",], aes(x=log(cycle), y=log(dampingFrac))) +
  geom_point(col="blue", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.175, 0.125) +
  labs(title="ChemIndex 121, Porisity 71") +
  theme(plot.title = element_text(size=25))

combined <- dfc1 + dfc2 + dfc3 + dfc4 + dfc5 + dfc6 + plot_layout(ncol = 3)
combined
```

The plots in @fig-5 separate the log(dampingFrac) vs log(cycle) graph from above to show how the interaction between chemical index and porosity impact log(dampingFrac). We can see differences in the log(dampingFrac) trends between different chemical indices, so there is likely a relationship present, but this relationship looks less pronounced than it was for the log(stiffnessFrac) trends.

Porosity also appears to have some effect. Trends in log(dampingFrac) for chemical index 121 are more similar to each other for low porosity than for high porosity, and trends in log(dampingFrac) for chemical index 79 are bit more similar to each other for high porosity than for low porosity. This suggests a porosity:chemIndex interaction term could improve our damping model, but this is still less clear than it was for stiffness.


## 3. Statistical Analysis 

Based on the research questions, we developed two separate models: one for stiffness fraction and the other for damping fraction. Due to the experimental design, and the fact that measurements from the same sample are not independent of each other, we used a mixed model format for our predictions. Log(cycle) was treated as a level-one variable because it changes across individual measurements, while all other variables were treated as level-two variables because they only vary across foam samples. In a mixed model, level-two variables impact the model intercept, and level-one variables interact with the level-two variables to effect the model slope. This accounts for each sample appeared to react to log(cycle) differently.

After starting with full models, we manually removed variables to increase the significance of the coefficients and to minimize the REML. Once base models were created, we used ANOVA testing to determine if the different levels of each predictor were significant and to compare against the full models. Based on this testing, we created models with the following predictors:

|    Stiffness Model Predictors    |        Damping Model Predictors                     
|:---------------------------------|:------------------------------------|
           chemIndex               |             chemIndex
             freq                  |               freq
          log(cycle)               |            log(cycle)
              amp                  |             porosity
       chemIndex:log(cycle)        |         chemIndex:log(cycle)
        freq:log(cycle)            |           freq:log(cycle)
        amp:log(cycle)             |         porosity:log(cycle)

\begin{center}
\text{Table 4: Selected Predictors}
\end{center}

We also found a significant relationship between stiffness fraction and the interaction between amplitude and frequency, but the addition of this term lowered the significance of the relationship between the response and chemical index. Since understanding the impact of chemical index is important to Foster, we decided to continue with our original model instead of including this term.

Despite the expectations we got from figures 4 and 5, we could not determine that an interaction between chemical index and porosity was as significant as the predictors listed in Table 4, so it was not included.
   
## 3.1 Stiffness

To predict log(stiffnessFrac), we used the following model:

**Level 1**: $\log(\text{stiffnessFrac}) = \alpha_i + \beta_i*log(cycle)$

**Level 2**: $\alpha_i = \alpha_0 + \alpha_1*\text{chemIndex} + \alpha_2*\text{freq} + \alpha_3*\text{amp}$
         
$\beta_i = \beta_0 + \beta_1*\text{chemIndex} +\beta_2*\text{freq} + \beta_3*\text{amp}$

The $\alpha$ terms in the model explain the impact of the covariates right after compressions begin (intercepts), and the $\beta$ terms explain the impact of the covariates as time goes on (slopes).

```{r, echo = FALSE}
library(car)
suppressWarnings(FactorModel1 <- lmer(log(stiffnessFrac) ~ factor(chemIndex) + freq + amp +  log(cycle) +  factor(chemIndex):log(cycle) +  freq:log(cycle) + amp:log(cycle) + (1 + log(cycle)|ID), data = foam_data_scaled))
summary(FactorModel1)$coef
```

\begin{center}
\text{Table 5: Coefficients for Stiffness Fraction Model}
\end{center}

In Table 5, we see high significance (aka p-value < 0.05) for most of our coefficients. Some variables are not significant on their own, their interactions with log(cycle) are. For example, chemical index does not appear to have a significant relationship with the response on it's own, but one level of chemical index has a significant relationship when interacted with log(cycle). The interaction terms explain how log(cycle) effects stiffness fraction differently under different conditions. 

In this summary, log(cycle) has a positive relationship with stiffnessFrac, but that is only when frequency and amplitude are zero. The interactions of freq and amp with log(cycle) have negative coefficients, showing us that stiffness decreases more when compressions are faster and larger. Chemical index levels 2 and 3 (aka 100 and 121) interacted with log(cycle) also have negative coefficients, indicating that these foams lose stiffness faster than foam with index 79.

Although Table 5 indicates chemical index levels 2 and 3 (aka 100 and 121) are not significant, the output below in Table 6 confirms that at least one chemical index is significantly different from another. To further assess the model, we used diagnostic plots to find that it meets the linearity, normality, and equal variance conditions. These plots are in the appendix.

```{r, echo = FALSE}
Anova(FactorModel1)
```

\begin{center}
\text{Table 6: Anova Analysis of Stiffness Fraction Model}
\end{center}

Lastly, it was necessary to explore the random effects associated with the mixed model. From @fig-6, we notice that as the intercept increases, the slope decreases. This is a very defined trend, supporting our conclusion that a mixed model should be used. We would expect the foams to start at a similar stiffness fraction, and deviate based on the other predictors as time passes. This plot confirms this behavior.

```{r, echo = FALSE}
#| echo: false
#| label: fig-6
#| warning: false
#| fig-cap: "Intercept Rand Effects vs. Slope Rand Effects"
#| fig-align: "center"
#| fig-width: 7
#| fig-height: 4

re <- ranef(FactorModel)$ID

plot(re)
```

##	3.2 Damping

To predict log(damping fraction), we used this model:

**Level 1**: $\log(\text{dampingFrac}) = \alpha_i + \beta_i*log(cycle)$

**Level 2**: $\alpha_i = \alpha_0 + \alpha_1*\text{chemIndex} + \alpha_2*\text{freq}$

$\beta_i = \beta_0 + \beta_1*\text{chemIndex} +\beta_2*\text{freq}$

```{r, echo = FALSE}
suppressWarnings(dampingModel <- lmer(log(stiffnessFrac) ~ factor(chemIndex) + freq + log(cycle) +  factor(chemIndex):log(cycle) + freq:log(cycle) + (1 + log(cycle)|ID), data = foam_data_scaled))
summary(dampingModel)$coef
```

\begin{center}
\text{Table 6: Coefficients for Damaping Fraction Model}
\end{center}

The summary of this model shows a high significance in almost all of our coefficients through small p-values (less than 0.05). These small p-values suggest that these variables are significant predictors of our response variable. Like the stiffness model, there are some predictors that do not have a significant p-value but their interaction terms are very significant. We can double check our predictors in the below table as well and see that all our predictors are significant. 

```{r}
Anova(dampingModel)
```

We used a residuals vs fitted plot and QQ plot to assess the conditions of our model (see Appendix). We found that this damping model meets all of these conditions which therefore we can analyze our model's results. 

Lastly, we must look at the random effects of our model in @fig-7. Like the stiffness model, as the intercept increases, the slope decreases. Although the trend is not as linear as the stiffness model, it still supports our conclusion that a mixed model should be used. Again, we would expect to see that each of the foams starts at a similar damping fraction and as time increases, there would be deviations based on the other predictors. This plot confirms this behavior.

```{r, echo = FALSE}
#| echo: false
#| label: fig-7
#| warning: false
#| fig-cap: "Intercept Rand Effects vs. Slope Rand Effects"
#| fig-align: "center"
#| fig-width: 7
#| fig-height: 4

re <- ranef(dampingModel)$ID

plot(re)
```

## 4. Recommendations 

**Question 1:** We see that frequency, amplitude, chemical index, and cycle all have significant impacts on both stiffness and damping. 

**Question 2:** For stiffness, we see that the individual predictors on their own will increase the initial stiffness, but as time goes on, foam using chemical index 121 will have the greatest decrease in stiffness. The individual predictors will impact damping in a similar way but foam with a chemical index of 79 will see the greatest decay in damping. Overall, there appear to be significant impacts on the stiffness and damping values depending on chemical index and frequency.

## 5. Additional Considerations

One concern we have about our conclusions is that they were made based on relatively few observations. Our model for stiffness fraction, for example, depends on chemical index, frequency, and amplitude, and only 12 samples with chemical index 100 were tested. There are too many possible combinations of frequency and amplitude to be explored thoroughly with just 12 samples. In cases like this, our models' coefficient estimates are based on very little information. The p-values gave us confidence that the coefficients were not zero, but our estimates could still be far off from their true values. We would need more observations to get a more reliable estimate of the true coefficients.

A similar concern comes from foam types and testing conditions that were used less often, such as high amplitude The reliability of our models is already limited, and for these cases they are even less reliable. Additionally, if one variety of foam was never tested at high amplitude, then the model's claims about that foam at high frequency are based on nothing, and should not be trusted at all. So not all information this model gives on what effects stiffness and damping in foam is equally trustworthy. 

Our models could have also been thrown off by conditions we didn't consider, such as room temperature and how many other people were using the laboratory. Since these conditions were not controlled for, they could have had an effect we were unable to detect.

Another consideration is that our models predict the log of stiffness fraction and the log of damping fraction linearly with the log of cycle number, which is a poor approximation in some cases. It is possible that models that are quadratic in log cycle number could have fit the data with slightly better accuracy, but these models would be harder to interpret. So our final models prioritize understanding the relationship between the responses and the predictors, possibly at the expense of accuracy.

For further studies, we recommend that more foam samples are tested, so that there are more observations to work with. The same number of each type of foam should be used, and the treatments such as amplitude and initial stress should be assigned evenly and randomly, so each treatment level is fully tested on each type of foam. This will allow for more trustworthy models.

## Technical Appendix

### Data Wrangling

```{r}
#| echo: true
#| eval: false
knitr::opts_chunk$set(echo = TRUE)

library(patchwork)
library("readxl")
library(ggplot2)
library(tidyverse)

foamDataRaw <- read_excel("DMA_Fatigue_Data_from_Team_Wendy_Polyurethane
                          _LLNL-MI-860456.xlsx")
names(foamDataRaw) <- foamDataRaw[3,]
foamDataRaw <- foamDataRaw[-c(1:3),] # remove rows without data
foamDataRaw <- foamDataRaw[,-c(62:64)] # remove duplicate columns

foamDataIntermediate <- foamDataRaw |>
  separate(col=SampleCode, into=c("Chemical", "chemIndex", "porosity", "ID")) |>
  select(!Chemical) |>
  mutate_at(vars(chemIndex), as.character) |>
  mutate_at(vars(porosity), as.character) |>
  mutate(chemIndex = dplyr::recode(chemIndex, "79"="1", "100"="2", "121"="3")) |>
  mutate(porosity = dplyr::recode(porosity, "71"="low", "81"="high")) |>
  rename("initialStrain"="strain") |>
  rename("initialStress"="stresskpa") |>
  mutate_at(c("Cyc_A", "Cyc_B", "Cyc_C", "Cyc_D", "Cyc_E", "Cyc_F", "Cyc_G", "Cyc_H", "Cyc_I", 
              "Cyc_J", "Cyc_K", "Cyc_L", "Cyc_M", "Cyc_N", "E1_MPA_Cyc_A", "E1_MPA_Cyc_B", 
              "E1_MPA_Cyc_C", "E1_MPA_Cyc_D", "E1_MPA_Cyc_E", "E1_MPA_Cyc_F", "E1_MPA_Cyc_G", 
              "E1_MPA_Cyc_H", "E1_MPA_Cyc_I", "E1_MPA_Cyc_J", "E1_MPA_Cyc_K", "E1_MPA_Cyc_L", 
              "E1_MPA_Cyc_M", "E1_MPA_Cyc_N", "delta_rad_Cyc_A", "delta_rad_Cyc_B", 
              "delta_rad_Cyc_C", "delta_rad_Cyc_D", "delta_rad_Cyc_E", "delta_rad_Cyc_F", 
              "delta_rad_Cyc_G", "delta_rad_Cyc_H", "delta_rad_Cyc_I", "delta_rad_Cyc_J", 
              "delta_rad_Cyc_K", "delta_rad_Cyc_L", "delta_rad_Cyc_M", "delta_rad_Cyc_N"), 
            as.numeric) |>
  mutate_at(c("E1_MPA_Cyc_A", "E1_MPA_Cyc_B", "E1_MPA_Cyc_C", "E1_MPA_Cyc_D", "E1_MPA_Cyc_E", 
              "E1_MPA_Cyc_F", "E1_MPA_Cyc_G", "E1_MPA_Cyc_H", "E1_MPA_Cyc_I", "E1_MPA_Cyc_J", 
              "E1_MPA_Cyc_K", "E1_MPA_Cyc_L", "E1_MPA_Cyc_M", "E1_MPA_Cyc_N"), abs)

#These lines add columns for Rate Of Change of stiffness and damping.
foamDataIntermediate <- foamDataIntermediate |>
  mutate(stiffness_ROC_A = NA) |>
  mutate(stiffness_ROC_B = (E1_MPA_Cyc_B - E1_MPA_Cyc_A)/(Cyc_B - Cyc_A))|>
  mutate(stiffness_ROC_C = (E1_MPA_Cyc_C - E1_MPA_Cyc_B)/(Cyc_C - Cyc_B))|>
  mutate(stiffness_ROC_D = (E1_MPA_Cyc_D - E1_MPA_Cyc_C)/(Cyc_D - Cyc_C))|>
  mutate(stiffness_ROC_E = (E1_MPA_Cyc_E - E1_MPA_Cyc_D)/(Cyc_E - Cyc_D))|>
  mutate(stiffness_ROC_F = (E1_MPA_Cyc_F - E1_MPA_Cyc_E)/(Cyc_F - Cyc_E))|>
  mutate(stiffness_ROC_G = (E1_MPA_Cyc_G - E1_MPA_Cyc_F)/(Cyc_G - Cyc_F))|>
  mutate(stiffness_ROC_H = (E1_MPA_Cyc_H - E1_MPA_Cyc_G)/(Cyc_H - Cyc_G))|>
  mutate(stiffness_ROC_I = (E1_MPA_Cyc_I - E1_MPA_Cyc_H)/(Cyc_I - Cyc_H))|>
  mutate(stiffness_ROC_J = (E1_MPA_Cyc_J - E1_MPA_Cyc_I)/(Cyc_J - Cyc_I))|>
  mutate(stiffness_ROC_K = (E1_MPA_Cyc_K - E1_MPA_Cyc_J)/(Cyc_K - Cyc_J))|>
  mutate(stiffness_ROC_L = (E1_MPA_Cyc_L - E1_MPA_Cyc_K)/(Cyc_L - Cyc_K))|>
  mutate(stiffness_ROC_M = (E1_MPA_Cyc_M - E1_MPA_Cyc_L)/(Cyc_M - Cyc_L))|>
  mutate(stiffness_ROC_N = (E1_MPA_Cyc_N - E1_MPA_Cyc_M)/(Cyc_N - Cyc_M))|>
  mutate(stiffness_frac_A = E1_MPA_Cyc_A / E1_MPA_Cyc_A) |>
  mutate(stiffness_frac_B = E1_MPA_Cyc_B / E1_MPA_Cyc_A) |>
  mutate(stiffness_frac_C = E1_MPA_Cyc_C / E1_MPA_Cyc_A) |>
  mutate(stiffness_frac_D = E1_MPA_Cyc_D / E1_MPA_Cyc_A) |>
  mutate(stiffness_frac_E = E1_MPA_Cyc_E / E1_MPA_Cyc_A) |>
  mutate(stiffness_frac_F = E1_MPA_Cyc_F / E1_MPA_Cyc_A) |>
  mutate(stiffness_frac_G = E1_MPA_Cyc_G / E1_MPA_Cyc_A) |>
  mutate(stiffness_frac_H = E1_MPA_Cyc_H / E1_MPA_Cyc_A) |>
  mutate(stiffness_frac_I = E1_MPA_Cyc_I / E1_MPA_Cyc_A) |>
  mutate(stiffness_frac_J = E1_MPA_Cyc_J / E1_MPA_Cyc_A) |>
  mutate(stiffness_frac_K = E1_MPA_Cyc_K / E1_MPA_Cyc_A) |>
  mutate(stiffness_frac_L = E1_MPA_Cyc_L / E1_MPA_Cyc_A) |>
  mutate(stiffness_frac_M = E1_MPA_Cyc_M / E1_MPA_Cyc_A) |>
  mutate(stiffness_frac_N = E1_MPA_Cyc_N / E1_MPA_Cyc_A) |>
  mutate(damping_frac_A = tan(delta_rad_Cyc_A) / tan(delta_rad_Cyc_A)) |>
  mutate(damping_frac_B = tan(delta_rad_Cyc_B) / tan(delta_rad_Cyc_A)) |>
  mutate(damping_frac_C = tan(delta_rad_Cyc_C) / tan(delta_rad_Cyc_A)) |>
  mutate(damping_frac_D = tan(delta_rad_Cyc_D) / tan(delta_rad_Cyc_A)) |>
  mutate(damping_frac_E = tan(delta_rad_Cyc_E) / tan(delta_rad_Cyc_A)) |>
  mutate(damping_frac_F = tan(delta_rad_Cyc_F) / tan(delta_rad_Cyc_A)) |>
  mutate(damping_frac_G = tan(delta_rad_Cyc_G) / tan(delta_rad_Cyc_A)) |>
  mutate(damping_frac_H = tan(delta_rad_Cyc_H) / tan(delta_rad_Cyc_A)) |>
  mutate(damping_frac_I = tan(delta_rad_Cyc_I) / tan(delta_rad_Cyc_A)) |>
  mutate(damping_frac_J = tan(delta_rad_Cyc_J) / tan(delta_rad_Cyc_A)) |>
  mutate(damping_frac_K = tan(delta_rad_Cyc_K) / tan(delta_rad_Cyc_A)) |>
  mutate(damping_frac_L = tan(delta_rad_Cyc_L) / tan(delta_rad_Cyc_A)) |>
  mutate(damping_frac_M = tan(delta_rad_Cyc_M) / tan(delta_rad_Cyc_A)) |>
  mutate(damping_frac_N = delta_rad_Cyc_N / delta_rad_Cyc_A) |>mutate(damping_ROC_A = NA) |>
  mutate(damping_ROC_B = (delta_rad_Cyc_B - delta_rad_Cyc_A)/(Cyc_B - Cyc_A))|>
  mutate(damping_ROC_C = (delta_rad_Cyc_C - delta_rad_Cyc_B)/(Cyc_C - Cyc_B))|>
  mutate(damping_ROC_D = (delta_rad_Cyc_D - delta_rad_Cyc_C)/(Cyc_D - Cyc_C))|>
  mutate(damping_ROC_E = (delta_rad_Cyc_E - delta_rad_Cyc_D)/(Cyc_E - Cyc_D))|>
  mutate(damping_ROC_F = (delta_rad_Cyc_F - delta_rad_Cyc_E)/(Cyc_F - Cyc_E))|>
  mutate(damping_ROC_G = (delta_rad_Cyc_G - delta_rad_Cyc_F)/(Cyc_G - Cyc_F))|>
  mutate(damping_ROC_H = (delta_rad_Cyc_H - delta_rad_Cyc_G)/(Cyc_H - Cyc_G))|>
  mutate(damping_ROC_I = (delta_rad_Cyc_I - delta_rad_Cyc_H)/(Cyc_I - Cyc_H))|>
  mutate(damping_ROC_J = (delta_rad_Cyc_J - delta_rad_Cyc_I)/(Cyc_J - Cyc_I))|>
  mutate(damping_ROC_K = (delta_rad_Cyc_K - delta_rad_Cyc_J)/(Cyc_K - Cyc_J))|>
  mutate(damping_ROC_L = (delta_rad_Cyc_L - delta_rad_Cyc_K)/(Cyc_L - Cyc_K))|>
  mutate(damping_ROC_M = (delta_rad_Cyc_M - delta_rad_Cyc_L)/(Cyc_M - Cyc_L))|>
  mutate(damping_ROC_N = (delta_rad_Cyc_N - delta_rad_Cyc_M)/(Cyc_N - Cyc_M))

# These lines lengthen the data by putting each measurement interval in its own data frame, 
#and row-binding them together.
foamDataA <- select(foamDataIntermediate, chemIndex:initialStress, Cyc_A, E1_MPA_Cyc_A, 
                    stiffness_ROC_A, stiffness_frac_A, delta_rad_Cyc_A, damping_ROC_A, 
                    damping_frac_A, NVP_Cyc_A) |>
  rename("cycle"="Cyc_A") |>
  rename("stiffness"="E1_MPA_Cyc_A") |>
  rename("damping"="delta_rad_Cyc_A") |>
  rename("NVP"="NVP_Cyc_A") |>
  mutate("intervalCode"="A") |>
  rename("stiffnessROC"="stiffness_ROC_A") |>
  rename("stiffnessFrac"="stiffness_frac_A") |>
  rename("dampingROC"="damping_ROC_A") |>
  rename("dampingFrac"="damping_frac_A")
foamDataB <- select(foamDataIntermediate, chemIndex:initialStress, Cyc_B, E1_MPA_Cyc_B, 
                    stiffness_ROC_B, stiffness_frac_B, delta_rad_Cyc_B, damping_ROC_B, 
                    damping_frac_B, NVP_Cyc_B) |>
  rename("cycle"="Cyc_B") |>
  rename("stiffness"="E1_MPA_Cyc_B") |>
  rename("damping"="delta_rad_Cyc_B") |>
  rename("NVP"="NVP_Cyc_B") |>
  mutate("intervalCode"="B") |>
  rename("stiffnessROC"="stiffness_ROC_B") |>
  rename("stiffnessFrac"="stiffness_frac_B") |>
  rename("dampingROC"="damping_ROC_B") |>
  rename("dampingFrac"="damping_frac_B")
foamDataC <- select(foamDataIntermediate, chemIndex:initialStress, Cyc_C, E1_MPA_Cyc_C, 
                    stiffness_ROC_C, stiffness_frac_C, delta_rad_Cyc_C, damping_ROC_C, 
                    damping_frac_C, NVP_Cyc_C) |>
  rename("cycle"="Cyc_C") |>
  rename("stiffness"="E1_MPA_Cyc_C") |>
  rename("damping"="delta_rad_Cyc_C") |>
  rename("NVP"="NVP_Cyc_C") |>
  mutate("intervalCode"="C") |>
  rename("stiffnessROC"="stiffness_ROC_C") |>
  rename("stiffnessFrac"="stiffness_frac_C") |>
  rename("dampingROC"="damping_ROC_C") |>
  rename("dampingFrac"="damping_frac_C")
foamDataD <- select(foamDataIntermediate, chemIndex:initialStress, Cyc_D, E1_MPA_Cyc_D, 
                    stiffness_ROC_D, stiffness_frac_D, delta_rad_Cyc_D, damping_ROC_D, 
                    damping_frac_D, NVP_Cyc_D) |>
  rename("cycle"="Cyc_D") |>
  rename("stiffness"="E1_MPA_Cyc_D") |>
  rename("damping"="delta_rad_Cyc_D") |>
  rename("NVP"="NVP_Cyc_D") |>
  mutate("intervalCode"="D") |>
  rename("stiffnessROC"="stiffness_ROC_D") |>
  rename("stiffnessFrac"="stiffness_frac_D") |>
  rename("dampingROC"="damping_ROC_D") |>
  rename("dampingFrac"="damping_frac_D")
foamDataE <- select(foamDataIntermediate, chemIndex:initialStress, Cyc_E, E1_MPA_Cyc_E, 
                    stiffness_ROC_E, stiffness_frac_E, delta_rad_Cyc_E, damping_ROC_E, 
                    damping_frac_E, NVP_Cyc_E) |>
  rename("cycle"="Cyc_E") |>
  rename("stiffness"="E1_MPA_Cyc_E") |>
  rename("damping"="delta_rad_Cyc_E") |>
  rename("NVP"="NVP_Cyc_E") |>
  mutate("intervalCode"="E") |>
  rename("stiffnessROC"="stiffness_ROC_E") |>
  rename("stiffnessFrac"="stiffness_frac_E") |>
  rename("dampingROC"="damping_ROC_E") |>
  rename("dampingFrac"="damping_frac_E")
foamDataF <- select(foamDataIntermediate, chemIndex:initialStress, Cyc_F, E1_MPA_Cyc_F, 
                    stiffness_ROC_F, stiffness_frac_F, delta_rad_Cyc_F, damping_ROC_F, 
                    damping_frac_F, NVP_Cyc_F) |>
  rename("cycle"="Cyc_F") |>
  rename("stiffness"="E1_MPA_Cyc_F") |>
  rename("damping"="delta_rad_Cyc_F") |>
  rename("NVP"="NVP_Cyc_F") |>
  mutate("intervalCode"="F") |>
  rename("stiffnessROC"="stiffness_ROC_F") |>
  rename("stiffnessFrac"="stiffness_frac_F") |>
  rename("dampingROC"="damping_ROC_F") |>
  rename("dampingFrac"="damping_frac_F")
foamDataG <- select(foamDataIntermediate, chemIndex:initialStress, Cyc_G, E1_MPA_Cyc_G, 
                    stiffness_ROC_G, stiffness_frac_G, delta_rad_Cyc_G, damping_ROC_G, 
                    damping_frac_G, NVP_Cyc_G) |>
  rename("cycle"="Cyc_G") |>
  rename("stiffness"="E1_MPA_Cyc_G") |>
  rename("damping"="delta_rad_Cyc_G") |>
  rename("NVP"="NVP_Cyc_G") |>
  mutate("intervalCode"="G") |>
  rename("stiffnessROC"="stiffness_ROC_G") |>
  rename("stiffnessFrac"="stiffness_frac_G") |>
  rename("dampingROC"="damping_ROC_G") |>
  rename("dampingFrac"="damping_frac_G")
foamDataH <- select(foamDataIntermediate, chemIndex:initialStress, Cyc_H, E1_MPA_Cyc_H, 
                    stiffness_ROC_H, stiffness_frac_H, delta_rad_Cyc_H, damping_ROC_H, 
                    damping_frac_H, NVP_Cyc_H) |>
  rename("cycle"="Cyc_H") |>
  rename("stiffness"="E1_MPA_Cyc_H") |>
  rename("damping"="delta_rad_Cyc_H") |>
  rename("NVP"="NVP_Cyc_H") |>
  mutate("intervalCode"="H") |>
  rename("stiffnessROC"="stiffness_ROC_H") |>
  rename("stiffnessFrac"="stiffness_frac_H") |>
  rename("dampingROC"="damping_ROC_H") |>
  rename("dampingFrac"="damping_frac_H")
foamDataI <- select(foamDataIntermediate, chemIndex:initialStress, Cyc_I, E1_MPA_Cyc_I, 
                    stiffness_ROC_I, stiffness_frac_I, delta_rad_Cyc_I, damping_ROC_I, 
                    damping_frac_I, NVP_Cyc_I) |>
  rename("cycle"="Cyc_I") |>
  rename("stiffness"="E1_MPA_Cyc_I") |>
  rename("damping"="delta_rad_Cyc_I") |>
  rename("NVP"="NVP_Cyc_I") |>
  mutate("intervalCode"="I") |>
  rename("stiffnessROC"="stiffness_ROC_I") |>
  rename("stiffnessFrac"="stiffness_frac_I") |>
  rename("dampingROC"="damping_ROC_I") |>
  rename("dampingFrac"="damping_frac_I")
foamDataJ <- select(foamDataIntermediate, chemIndex:initialStress, Cyc_J, E1_MPA_Cyc_J, 
                    stiffness_ROC_J, stiffness_frac_J, delta_rad_Cyc_J, damping_ROC_J, 
                    damping_frac_J, NVP_Cyc_J) |>
  rename("cycle"="Cyc_J") |>
  rename("stiffness"="E1_MPA_Cyc_J") |>
  rename("damping"="delta_rad_Cyc_J") |>
  rename("NVP"="NVP_Cyc_J") |>
  mutate("intervalCode"="J") |>
  rename("stiffnessROC"="stiffness_ROC_J") |>
  rename("stiffnessFrac"="stiffness_frac_J") |>
  rename("dampingROC"="damping_ROC_J") |>
  rename("dampingFrac"="damping_frac_J")
foamDataK <- select(foamDataIntermediate, chemIndex:initialStress, Cyc_K, E1_MPA_Cyc_K, 
                    stiffness_ROC_K, stiffness_frac_K, delta_rad_Cyc_K, damping_ROC_K, 
                    damping_frac_K, NVP_Cyc_K) |>
  rename("cycle"="Cyc_K") |>
  rename("stiffness"="E1_MPA_Cyc_K") |>
  rename("damping"="delta_rad_Cyc_K") |>
  rename("NVP"="NVP_Cyc_K") |>
  mutate("intervalCode"="K") |>
  rename("stiffnessROC"="stiffness_ROC_K") |>
  rename("stiffnessFrac"="stiffness_frac_K") |>
  rename("dampingROC"="damping_ROC_K") |>
  rename("dampingFrac"="damping_frac_K")
foamDataL <- select(foamDataIntermediate, chemIndex:initialStress, Cyc_L, E1_MPA_Cyc_L, 
                    stiffness_ROC_L, stiffness_frac_L, delta_rad_Cyc_L, damping_ROC_L, 
                    damping_frac_L, NVP_Cyc_L) |>
  rename("cycle"="Cyc_L") |>
  rename("stiffness"="E1_MPA_Cyc_L") |>
  rename("damping"="delta_rad_Cyc_L") |>
  rename("NVP"="NVP_Cyc_L") |>
  mutate("intervalCode"="L") |>
  rename("stiffnessROC"="stiffness_ROC_L") |>
  rename("stiffnessFrac"="stiffness_frac_L") |>
  rename("dampingROC"="damping_ROC_L") |>
  rename("dampingFrac"="damping_frac_L")
foamDataM <- select(foamDataIntermediate, chemIndex:initialStress, Cyc_M, E1_MPA_Cyc_M, 
                    stiffness_ROC_M, stiffness_frac_M, delta_rad_Cyc_M, damping_ROC_M, 
                    damping_frac_M, NVP_Cyc_M) |>
  rename("cycle"="Cyc_M") |>
  rename("stiffness"="E1_MPA_Cyc_M") |>
  rename("damping"="delta_rad_Cyc_M") |>
  rename("NVP"="NVP_Cyc_M") |>
  mutate("intervalCode"="M") |>
  rename("stiffnessROC"="stiffness_ROC_M") |>
  rename("stiffnessFrac"="stiffness_frac_M") |>
  rename("dampingROC"="damping_ROC_M") |>
  rename("dampingFrac"="damping_frac_M")
foamDataN <- select(foamDataIntermediate, chemIndex:initialStress, Cyc_N, E1_MPA_Cyc_N, 
                    stiffness_ROC_N, stiffness_frac_N, delta_rad_Cyc_N, damping_ROC_N, 
                    damping_frac_N, NVP_Cyc_N) |>
  rename("cycle"="Cyc_N") |>
  rename("stiffness"="E1_MPA_Cyc_N") |>
  rename("damping"="delta_rad_Cyc_N") |>
  rename("NVP"="NVP_Cyc_N") |>
  mutate("intervalCode"="N") |>
  rename("stiffnessROC"="stiffness_ROC_N") |>
  rename("stiffnessFrac"="stiffness_frac_N") |>
  rename("dampingROC"="damping_ROC_N") |>
  rename("dampingFrac"="damping_frac_N")

foamData <- rbind(foamDataA, foamDataB, foamDataC, foamDataD, foamDataE, foamDataF, foamDataG, 
                  foamDataH, foamDataI, foamDataJ, foamDataK, foamDataL, foamDataM, foamDataN)

# Filter rows with NA in the cycle, stiffness, and damping columns
foamData <- filter(foamData, !is.na(cycle))

# Reorder the columns
foamData <- select(foamData, 3, 1, 2, 4, 5, 6, 7, 16, 8, 11, 14, 9, 12, 10, 13, 15)

# write the file
write_csv(foamData, "foamData.csv")
```

### R Script for plots, models, and tables in Sections 2 and 3:

```{r}
#| echo: true
#| eval: false

foam_data <- read.csv("foamData.csv")

#Some extra wrangling
foam_data_scaled <- foam_data |>
  filter(cycle <= 10000 & cycle > 0)

FactorModel <- lmer(log(stiffnessFrac) ~  porosity + factor(chemIndex) 
                    + factor(chemIndex):porosity + log(cycle) +  factor(chemIndex):log(cycle) 
                    + porosity:log(cycle) + factor(chemIndex):porosity:log(cycle) 
                    + (1 + log(cycle)|ID), data = foam_data_scaled)

dampingModel <- lmer(log(dampingFrac) ~ porosity + factor(chemIndex) + freq + log(cycle) 
                     + porosity:log(cycle) + freq:log(cycle) + factor(chemIndex):log(cycle) 
                     + (1 + log(cycle)|ID), data = foam_data_scaled)

# Convert intervalCode to a factor with specified levels
foam_data_scaled$intervalCode <- factor(foam_data_scaled$intervalCode, levels = c("A", "B", "C", 
                                       "D","E", "F", "G", "H","I", "J", "K", "L","M", "N"))

# EDA code

# graph1
foam_Samples <- foam_data[ ,c("ID", "chemIndex", "porosity", "freq", "amp", "initialStrain", 
                              "initialStress")]
foam_Samples <- unique(foam_Samples)

count(foam_Samples, chemIndex, porosity)

ggplot(foam_Samples, aes(x=amp)) +
  geom_histogram(bins=10)

# graph2
p1 <- ggplot(foam_data_scaled, aes(y = stiffnessFrac, x = cycle, col=factor(ID))) +
  geom_point() + 
  theme(legend.position="none")

p2 <- ggplot(foam_data_scaled, aes(y = dampingFrac, x = cycle, col=factor(ID))) + 
  geom_point() +
  theme(legend.position="none")

combined <- p1 + p2

combined

# graph3
sp1 <- ggplot(foam_data_scaled, aes(y = log(stiffnessFrac), x = log(cycle))) 
+ geom_point(aes(color = freq))

dp1 <- ggplot(foam_data_scaled, aes(y = log(dampingFrac), x = log(cycle))) 
+ geom_point(aes(color = freq))

combined <- sp1 + dp1
combined

# graph4
sfc1 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 1 & foam_data$porosity 
                                == "high",], aes(x=log(cycle), y=log(stiffnessFrac))) +
  geom_point(color="red", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.325, 0.15) +
  labs(title="ChemIndex 79, Porisity 81") +
  theme(plot.title = element_text(size=25))
sfc2 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 2 & foam_data$porosity 
                                == "high",], aes(x=log(cycle), y=log(stiffnessFrac))) +
  geom_point(color="green", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.325, 0.15) +
  labs(title="ChemIndex 100, Porisity 81") +
  theme(plot.title = element_text(size=25))
sfc3 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 3 & foam_data$porosity 
                                == "high",], aes(x=log(cycle), y=log(stiffnessFrac))) +
  geom_point(color="cyan2", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.325, 0.15) +
  labs(title="ChemIndex 121, Porisity 81") +
  theme(plot.title = element_text(size=25))
sfc4 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 1 & foam_data$porosity 
                                == "low",], aes(x=log(cycle), y=log(stiffnessFrac))) +
  geom_point(color="red3", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.325, 0.15) +
  labs(title="ChemIndex 79, Porisity 71") +
  theme(plot.title = element_text(size=25))
sfc5 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 2 & foam_data$porosity
                                == "low",], aes(x=log(cycle), y=log(stiffnessFrac))) +
  geom_point(color="green4", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.325, 0.15) +
  labs(title="ChemIndex 100, Porisity 71") +
  theme(plot.title = element_text(size=25))
sfc6 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 3 & foam_data$porosity
                                == "low",], aes(x=log(cycle), y=log(stiffnessFrac))) +
  geom_point(col="blue", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.325, 0.15) +
  labs(title="ChemIndex 121, Porisity 71") +
  theme(plot.title = element_text(size=25))

combined <- sfc1 + sfc2 + sfc3 + sfc4 + sfc5 + sfc6 + plot_layout(ncol = 3)
combined

# graph5
dfc1 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 1 & foam_data_scaled$porosity 
                                == "high",], aes(x=log(cycle), y=log(dampingFrac))) +
  geom_point(color="red", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.175, 0.125) +
  labs(title="ChemIndex 79, Porisity 81") +
  theme(plot.title = element_text(size=25))
dfc2 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 2 & foam_data_scaled$porosity 
                                == "high",], aes(x=log(cycle), y=log(dampingFrac))) +
  geom_point(color="green", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.175, 0.125) +
  labs(title="ChemIndex 100, Porisity 81") +
  theme(plot.title = element_text(size=25))
dfc3 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 3 & foam_data_scaled$porosity 
                                == "high",], aes(x=log(cycle), y=log(dampingFrac))) +
  geom_point(color="cyan2", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.175, 0.125) +
  labs(title="ChemIndex 121, Porisity 81") +
  theme(plot.title = element_text(size=25))
dfc4 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 1 & foam_data_scaled$porosity 
                                == "low",], aes(x=log(cycle), y=log(dampingFrac))) +
  geom_point(color="red3", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.175, 0.125) +
  labs(title="ChemIndex 79, Porisity 71") +
  theme(plot.title = element_text(size=25))
dfc5 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 2 & foam_data_scaled$porosity 
                                == "low",], aes(x=log(cycle), y=log(dampingFrac))) +
  geom_point(color="green4", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.175, 0.125) +
  labs(title="ChemIndex 100, Porisity 71") +
  theme(plot.title = element_text(size=25))
dfc6 <- ggplot(foam_data_scaled[foam_data_scaled$chemIndex == 3 & foam_data_scaled$porosity 
                                == "low",], aes(x=log(cycle), y=log(dampingFrac))) +
  geom_point(col="blue", size=3) + 
  geom_hline(yintercept = 0, linetype="dashed") +
  ylim(-0.175, 0.125) +
  labs(title="ChemIndex 121, Porisity 71") +
  theme(plot.title = element_text(size=25))

combined <- dfc1 + dfc2 + dfc3 + dfc4 + dfc5 + dfc6 + plot_layout(ncol = 3)
combined

#StiffnessFrac Model
library(car)
suppressWarnings(FactorModel1 <- lmer(log(stiffnessFrac) ~ factor(chemIndex) + freq + amp +  log(cycle) +  factor(chemIndex):log(cycle) +  freq:log(cycle) + amp:log(cycle) + (1 + log(cycle)|ID), data = foam_data_scaled))
summary(FactorModel1)$coef
Anova(FactorModel)

# random effects of stiffnessFrac model
re <- ranef(FactorModel)$ID

plot(re)

Anova(dampingModel)

# random effects of dampingFrac model
re <- ranef(dampingModel)$ID

plot(re)
```


```{r}
#| echo: true
#| label: fig-example1
#| warning: false
#| fig-cap: "Backward Selection for stiffnessFrac Predictors"
#| fig-align: "center"
#| fig-width: 7
#| fig-height: 4
regfit.full <- regsubsets(log(stiffnessFrac) ~ chemIndex + porosity + freq + amp 
                          + initialStrain + initialStress + log(cycle) + (chemIndex 
                          + porosity + freq + amp + initialStrain + initialStress)*log(cycle) 
                          + (1 + log(cycle)|ID), 
                          data = foam_data_scaled)
#regfit.full <- regsubsets(stiffnessFrac ~ ., data = foam_data_scaled)
plot(regfit.full, scale = 'bic')
```

```{r}
#| echo: true
#| label: fig-example2
#| warning: false
#| fig-cap: "Backward Selection for dampingFrac Predictors"
#| fig-align: "center"
#| fig-width: 7
#| fig-height: 4
#| 
regfit.full <- regsubsets(log(dampingFrac) ~ chemIndex + porosity + freq + amp 
                          + initialStrain + initialStress + log(cycle) + chemIndex:porosity 
                          + (chemIndex + porosity + freq + amp + initialStrain 
                          + initialStress + chemIndex:porosity)*log(cycle) 
                          + (1 + log(cycle)|ID), data = foam_data_scaled)

plot(regfit.full, scale = "bic")
```

```{r}
#| echo: true
#| label: fig-example3
#| warning: false
#| fig-cap: "Residual Plot of Stiffness Fraction Model"
#| fig-align: "center"
#| fig-width: 7
#| fig-height: 4

plot(FactorModel)
```

```{r}
#| echo: true
#| label: fig-example4
#| warning: false
#| fig-cap: "QQ Plot of Stiffness Fraction Model"
#| fig-align: "center"
#| fig-width: 7
#| fig-height: 4

qqnorm(resid(FactorModel))
qqline(resid(FactorModel))
```

```{r}
#| echo: true
#| label: fig-example5
#| warning: false
#| fig-cap: "Residual Plot of Damping Fraction Model"
#| fig-align: "center"
#| fig-width: 7
#| fig-height: 4

plot(dampingModel)
```

```{r}
#| echo: true
#| label: fig-example6
#| warning: false
#| fig-cap: "QQ Plot of Damping Fraction Model"
#| fig-align: "center"
#| fig-width: 7
#| fig-height: 4
qqnorm(resid(dampingModel))
qqline(resid(dampingModel))
```
